{"version":3,"sources":["components/Login.js","components/Test.js","logo.svg","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseui","require","Login","props","firebase","useEffect","ui","auth","AuthUI","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","console","log","user","uid","document","getElementById","style","display","uiShown","signInFlow","signInSuccessUrl","signInOptions","EmailAuthProvider","PROVIDER_ID","tosUrl","privacyPolicyUrl","start","id","to","Test","useState","visible","setVisible","text","setText","num","onClick","styles","backgroundColor","color","Home","useParams","currentUser","className","src","logo","alt","href","target","rel","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","firestore","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6NAGIA,G,MAAaC,EAAQ,KAoDVC,EAlDD,SAACC,GACd,IAAIC,EAAWD,EAAMC,SAqCpB,OAlCAC,qBAAU,WAER,IAAIC,EAAK,IAAIN,EAAWO,KAAKC,OAAOJ,EAASG,QAEzCE,EAAW,CACbC,UAAW,CACTC,4BAA6B,SAAUC,EAAYC,GAGjD,OAFLC,QAAQC,IAAIH,EAAWI,KAAKC,KACvBC,SAASC,eAAe,cAAcC,MAAMC,QAAU,SAC/C,GAETC,QAAS,WAGPJ,SAASC,eAAe,UAAUC,MAAMC,QAAU,SAItDE,WAAY,QACZC,iBAAkB,IAClBC,cAAe,CAEbrB,EAASG,KAAKmB,kBAAkBC,aAGlCC,OAAQ,iBAERC,iBAAkB,6BAIpB,OADAvB,EAAGwB,MAAM,6BAA8BrB,GAChC,eACN,IAGD,gCACE,2DACA,qBAAKsB,GAAG,8BACR,qBAAKA,GAAG,SAAR,wBACA,cAAC,IAAD,CAAMA,GAAG,aAAaC,GAAG,OAAOZ,MAAO,CAAEC,QAAS,QAAlD,sB,QCESY,EAhDF,SAAC9B,GAAU,MAIQ+B,oBAAS,GAJjB,mBAIfC,EAJe,KAINC,EAJM,OAKEF,mBAAS,MALX,mBAKfG,EALe,KAKTC,EALS,KAoCtB,OAhBAjC,qBAAU,WAER,OADAS,QAAQC,IAAI,mBAAqBZ,EAAMoC,KAChC,WACLzB,QAAQC,IAAI,iBAAmBZ,EAAMoC,QAEtC,CAACpC,EAAMoC,MAYR,gCACGpC,EAAMoC,IACN,IAED,wBAAQC,QAAS,kBAAMJ,GAAYD,IAAnC,sBACCA,GAAW,qCAAQE,EAAR,OACZ,wBAAQG,QApCQ,WAEhBF,EADW,OAATD,EACM,KAEA,OAgCR,gCC7CS,MAA0B,iCCOnCI,EAAS,CACbC,gBAAiB,QACjBC,MAAO,SAgCMC,EA7BF,SAACzC,GACC0C,cAAPd,GAGN,OAFAjB,QAAQC,IAAIZ,EAAMC,SAASG,OAAOuC,aAGhC,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,oBAAIH,UAAU,YAAd,mBACA,8DACA,oBAAGA,UAAU,kBAAb,kBACO,sBAAM3B,MAAOqB,EAAb,wBADP,0BAGA,mBACEM,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,oBAAIN,UAAU,QAAd,6CACA,cAAC,EAAD,CAAMR,IAAK,IACX,cAAC,EAAD,CAAMA,IAAK,U,mBCNnBnC,IAASkD,cAZc,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,YACE,qEACFC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAwBFC,MAnBf,WAIE,OAFgB3D,IAAS4D,YAGvB,eAAC,IAAD,WACE,cAAC,IAAD,CAAMhC,GAAG,SAAT,mBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiC,KAAK,SAAZ,SACE,cAAC,EAAD,CAAO7D,SAAUA,QAEnB,cAAC,IAAD,CAAO6D,KAAK,QAAZ,SACE,cAAC,EAAD,CAAO7D,SAAUA,eC/BZ8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3D,SAASC,eAAe,SAM1B+C,M","file":"static/js/main.dba08442.chunk.js","sourcesContent":["import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nvar firebaseui = require(\"firebaseui\")\r\n\r\nconst Login = (props) => {\r\n\tvar firebase = props.firebase\r\n\t\r\n\r\n  useEffect(() => {\r\n    // Initialize the FirebaseUI Widget using Firebase.\r\n    var ui = new firebaseui.auth.AuthUI(firebase.auth())\r\n\r\n    var uiConfig = {\r\n      callbacks: {\r\n        signInSuccessWithAuthResult: function (authResult, redirectUrl) {\r\n\t\t\t\t\tconsole.log(authResult.user.uid)\r\n          document.getElementById(\"backButton\").style.display = \"block\"\r\n          return false\r\n        },\r\n        uiShown: function () {\r\n          // The widget is rendered.\r\n          // Hide the loader.\r\n          document.getElementById(\"loader\").style.display = \"none\"\r\n        },\r\n      },\r\n      // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\r\n      signInFlow: \"popup\",\r\n      signInSuccessUrl: \"#\",\r\n      signInOptions: [\r\n        // Leave the lines as is for the providers you want to offer your users.\r\n        firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      ],\r\n      // Terms of service url.\r\n      tosUrl: \"<your-tos-url>\",\r\n      // Privacy policy url.\r\n      privacyPolicyUrl: \"<your-privacy-policy-url>\",\r\n    }\r\n\r\n    ui.start(\"#firebaseui-auth-container\", uiConfig)\r\n    return () => {}\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to My Awesome App</h1>\r\n      <div id=\"firebaseui-auth-container\"></div>\r\n      <div id=\"loader\">Loading...</div>\r\n      <Link id=\"backButton\" to=\"home\" style={{ display: \"none\" }}>\r\n        Back\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nconst Test = (props) => {\r\n  // state = état = données du composants\r\n  // Quand on l'update, le rendu du COMPOSANT se re-fait en entier (le return)\r\n  // useState(etatInitial) renvoie l'objet du state (ici visible un boolean) et le setter (setVisible)\r\n  const [visible, setVisible] = useState(false)\r\n  const [text, setText] = useState(\"GG\")\r\n\r\n  const handleClick = () => {\r\n    if (text === \"OH\") {\r\n      setText(\"AH\")\r\n    } else {\r\n      setText(\"OH\")\r\n    }\r\n  }\r\n\r\n  // Equivalent de componentDidMount, etc. d'une classe React\r\n  // Se lance au rendu du composant et lance le return quand le composant disparait\r\n  // [x, y, z] la liste des variables dont useEffect dépend\r\n  // ATTENTION AUX BOUCLES : si useEffect appelle un setter du state !\r\n  // Ici le return se lance pas\r\n  useEffect(() => {\r\n    console.log(\"rendu de test : \" + props.num)\r\n    return () => {\r\n      console.log(\"fin de test : \" + props.num)\r\n    }\r\n  }, [props.num])\r\n\r\n  // > Return = le rendu (sous forme de JSX)\r\n  // > props = des paramètres qu'on peut envoyer à chaque composants\r\n  //    ici on envoye num={x} dans le composant App donc props.num = x\r\n  // > {visible && <div></div>} signifie que si visible == true (et != null implicitement) on retourne la <div></div> après le &&\r\n        // -> on peut enchainer plusieurs &&\r\n        // -> on peut return une seul <div> (penser à foutre tout dans une si on doit afficher un gros truc)\r\n  // > (p) => quelqueChose(p) permet de créer une fonction fléché avec paramètre\r\n        // -> pour éviter les problèmes de réf à this et permettre d'envoyer des paramètres\r\n  // > {\" \"} insère un espace\r\n  return (\r\n    <div>\r\n      {props.num}\r\n      {\" \"}\r\n\r\n      <button onClick={() => setVisible(!visible)}>Click me</button>\r\n      {visible && <span> {text} </span>}\r\n      <button onClick={handleClick}>Click me aussi</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Test\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\r\n\r\nimport Test from \"./Test\"\r\nimport logo from \"../logo.svg\"\r\n\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst styles = {\r\n  backgroundColor: \"white\",\r\n  color: \"black\",\r\n}\r\n\r\nconst Home = (props) => {\r\n  let { id } = useParams()\r\n  console.log(props.firebase.auth().currentUser)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <h1 className=\"font-bold\">KUWYS</h1>\r\n        <h2>Keeping Up With Your Studies</h2>\r\n        <p className=\"text-yellow-300\">\r\n          Edit <code style={styles}>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n        <h4 className=\"mt-10\">Petits tests pour vous la mif :</h4>\r\n        <Test num={1}></Test>\r\n        <Test num={2}></Test>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\"\r\n\r\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\"\r\n\r\nimport \"./App.css\"\r\nimport Login from \"./components/Login.js\"\r\nimport Home from \"./components/Home.js\"\r\n\r\n// Firebase App (the core Firebase SDK) is always required and\r\n// must be listed before other Firebase SDKs\r\nimport firebase from \"firebase/app\"\r\n\r\n// Add the Firebase services that you want to use\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCgFeqJUZHVMB--gTaaahweCQIbADUnNkg\",\r\n  authDomain: \"pjs4-iut-ts.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://pjs4-iut-ts-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"pjs4-iut-ts\",\r\n  storageBucket: \"pjs4-iut-ts.appspot.com\",\r\n  messagingSenderId: \"291848628623\",\r\n  appId: \"1:291848628623:web:dac0799f99f6541b8d83fa\",\r\n  measurementId: \"G-PDZVB2VGCW\",\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nfunction App() {\r\n\r\n  var firestore = firebase.firestore()\r\n\r\n  return (\r\n    <Router>\r\n      <Link to=\"/login\">Login</Link>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <Login firebase={firebase}/>\r\n        </Route>\r\n        <Route path=\"/home\">\r\n          <Home  firebase={firebase}/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}